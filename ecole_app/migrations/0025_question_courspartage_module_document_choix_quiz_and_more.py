# Generated by Django 5.0 on 2025-08-08 12:34

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ecole_app', '0024_alter_objectifmensuel_description_libre'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('type', models.CharField(choices=[('choix_unique', 'Choix unique'), ('choix_multiple', 'Choix multiple'), ('texte_court', 'Réponse texte courte'), ('vrai_faux', 'Vrai ou Faux')], default='choix_unique', max_length=20)),
                ('points', models.PositiveIntegerField(default=1, help_text='Nombre de points pour cette question')),
                ('ordre', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='CoursPartage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('fichier', models.FileField(upload_to='cours_partages/')),
                ('date_debut', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de début du cours')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True, help_text='Le cours est-il actif et visible ?')),
                ('classes', models.ManyToManyField(related_name='cours_partages', to='ecole_app.classe')),
                ('eleve', models.ForeignKey(blank=True, help_text='Élève concerné (optionnel)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cours_partages', to='ecole_app.eleve')),
                ('professeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours_partages', to='ecole_app.professeur')),
            ],
            options={
                'verbose_name': 'Cours partagé',
                'verbose_name_plural': 'Cours partagés',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('publie', models.BooleanField(default=False, help_text='Module visible par les élèves')),
                ('classes', models.ManyToManyField(blank=True, related_name='modules', to='ecole_app.classe')),
                ('composante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='ecole_app.composante')),
                ('professeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='ecole_app.professeur')),
            ],
            options={
                'verbose_name': 'Module pédagogique',
                'verbose_name_plural': 'Modules pédagogiques',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('fichier', models.FileField(upload_to='documents/%Y/%m/')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('ordre', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage")),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='ecole_app.module')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['ordre', 'date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Choix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.CharField(max_length=255)),
                ('est_correct', models.BooleanField(default=False)),
                ('ordre', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage")),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choix', to='ecole_app.question')),
            ],
            options={
                'verbose_name': 'Choix',
                'verbose_name_plural': 'Choix',
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('publie', models.BooleanField(default=False, help_text='Quiz visible par les élèves')),
                ('temps_limite', models.PositiveIntegerField(blank=True, help_text='Temps limite en minutes (optionnel)', null=True)),
                ('ordre', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage")),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='ecole_app.module')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quiz',
                'ordering': ['ordre', 'date_creation'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='ecole_app.quiz'),
        ),
        migrations.CreateModel(
            name='TentativeQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField(auto_now_add=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('terminee', models.BooleanField(default=False)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tentatives_quiz', to='ecole_app.eleve')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tentatives', to='ecole_app.quiz')),
            ],
            options={
                'verbose_name': 'Tentative de quiz',
                'verbose_name_plural': 'Tentatives de quiz',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte_reponse', models.TextField(blank=True, null=True)),
                ('est_correcte', models.BooleanField(default=False)),
                ('choix_selectionnes', models.ManyToManyField(blank=True, related_name='reponses', to='ecole_app.choix')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecole_app.question')),
                ('tentative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='ecole_app.tentativequiz')),
            ],
        ),
    ]
